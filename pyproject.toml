[tool.poetry]
name = "enrich-ddf-floor-2"
version = "0.1.0"
description = "Unified Data Enrichment Platform - Production Ready FastAPI Application"
authors = ["DadosFera Team <tech@dadosfera.ai>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.100.0"
uvicorn = {extras = ["standard"], version = "^0.22.0"}
pydantic = {extras = ["email"], version = "^2.0.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.0"}
alembic = "^1.11.0"
asyncpg = "^0.28.0"
redis = "^4.6.0"
celery = "^5.3.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
PyJWT = "^2.8.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
httpx = "^0.24.0"
aiofiles = "^23.0.0"
python-dotenv = "^1.0.0"
structlog = "^23.1.0"
prometheus-client = "^0.17.0"
pydantic-settings = "^2.0.0"
tenacity = "^8.2.0"
jinja2 = "^3.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.4.0"
pre-commit = "^3.3.0"
httpx = "^0.24.0"
pytest-mock = "^3.11.0"
faker = "^19.0.0"
bandit = "^1.7.5"
pydocstyle = "^6.3.0"
autoflake = "^2.2.0"
autopep8 = "^2.0.2"
flake8-docstrings = "^1.7.0"
flake8-import-order = "^0.18.2"
flake8-typing-imports = "^1.14.0"
safety = "^2.3.0"
types-requests = "^2.31.0"
types-redis = "^4.6.0"
types-python-dateutil = "^2.8.19"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  migrations
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=app --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 